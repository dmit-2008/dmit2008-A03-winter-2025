// we'll need these because we're going to be making an api call to the space devs api.
import {useEffect, useState} from 'react'

import Head from 'next/head'

import Box from '@mui/material/Box';
import Container from '@mui/material/Container';
import Typography from '@mui/material/Typography';
import TextField from '@mui/material/TextField';

import AgencyCard from '@components/AgencyCard';
import NavBar from '@components/NavBar';

import { getAgencies } from '@utils/api/agencies';


export default function Home() {
  // we're going to load this with our state
  const [isLoading,setIsLoading] = useState(true)
  // we're going to make this undefined by default
  // but we're going to get this information
  // from the api.
  const [agencies, setAgencies] = useState()


  const loadAgencies = async () => {
    // note handle the error state we're not
    // going to do it for this example.
    const data = await getAgencies()
    // set the state and the loading
    setAgencies(data)
    setIsLoading(false)

  }


  useEffect(()=> {
    loadAgencies()

  }, []) // the on mount of the life cycle.



  if (isLoading) {
    return "Loading..."
  }

  // if we hit this point then we should
  // see the data
  console.log(agencies)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <NavBar />

        <Container sx={{paddingTop:2}} component="main" maxWidth="xs">

          <Typography variant="h3">
            Space Agencies
          </Typography>
          <Box
            sx={{
              marginTop: 2,
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
            }}
          >
            <TextField
              label="Search"
              fullWidth
            />

            {/* We're going to loop through
            the agencies and render the cards */
            agencies.results.map((agency)=> {
              return <AgencyCard
                key={agency.id}
                // the ? after image does a quick check
                // if it exists.
                imageUrl={agency.image?.image_url}
                name={agency.name}
                abbreviation={agency.abbrev}
                description={agency.description}
                // pass in the id so that we
                // can use it in the router.
                id={agency.id}
              />
            })}

          </Box>
        </Container>

    </div>
  )
}
